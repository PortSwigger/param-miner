add.static.cache.buster.name=Add 'fcbz' cache buster
add.static.cache.buster.value=false
add.static.cache.buster.description=Add a static cache-buster to all outbound requests, to avoid manual cache poisoning probes affecting other users

add.dynamic.cache.buster.name=Add dynamic cache buster
add.dynamic.cache.buster.value=false
add.dynamic.cache.buster.description=Add a dynamic cache-buster to all requests, to avoid seeing cached responses

learn.observed.words.name=Learn observed words
learn.observed.words.value=false
learn.observed.words.description=During Burp's passive scanning, record all words seen in the response and use them when guessing parameters

enable.auto.mine.name=Enable auto-mine
enable.auto.mine.value=false
enable.auto.mine.description=Automatically launch param guessing attacks on traffic as it passes through the proxy

auto.mine.headers.name=Auto-mine headers
auto.mine.headers.value=false
auto.mine.headers.description=When auto-mining proxied traffic, guess headers

auto.mine.cookies.name=Auto-mine cookies
auto.mine.cookies.value=false
auto.mine.cookies.description=When auto-mining proxied traffic, guess cookies

auto.mine.params.name=Auto-mine params
auto.mine.params.value=false
auto.mine.params.description=When auto-mining proxied traffic, guess parameters

auto.nest.params.name=Auto-nest params
auto.nest.params.value=false
auto.nest.params.description=When guessing parameters in JSON, attempt to guess deeper in nested structures. Might not work.

# Guess Settings
skip.boring.words.name=Skip boring words
skip.boring.words.value=true
skip.boring.words.description=When mining headers, don't check for well known and typically not very exciting headers

only.report.unique.params.name=Only report unique params
only.report.unique.params.value=false
only.report.unique.params.description=Only report a parameter with a given name once, regardless of how many endpoints are scanned

response.name=Response
response.value=true
response.description=Extract words from the target request, and use these to guess params

request.name=Request
request.value=true
request.description=Extract words from the target response, and use these to guess params. Highly recommended.

use.basic.wordlist.name=Use basic wordlist
use.basic.wordlist.value=true
use.basic.wordlist.description=When guessing params, use the core wordlist

use.bonus.wordlist.name=Use bonus wordlist
use.bonus.wordlist.value=false
use.bonus.wordlist.description=When guessing params, also use a generic wordlist

use.assetnote.params.name=Use assetnote params
use.assetnote.params.value=false
use.assetnote.params.description=When guessing params, use the assetnote wordlist

use.custom.wordlist.name=Use custom wordlist
use.custom.wordlist.value=false
use.custom.wordlist.description=Load a custom wordlist from the configured path

custom.wordlist.path.name=Custom wordlist path
custom.wordlist.path.value=/usr/share/dict/words
custom.wordlist.path.description=Load a custom wordlist from the configured path

bruteforce.name=Bruteforce
bruteforce.value=false
bruteforce.description=When all the wordlist have run out, switch to guessing params with a never-ending pure bruteforce attack.

skip.uncacheable.name=Skip uncacheable
skip.uncacheable.value=false
skip.uncacheable.description=Refuse to guess params on responses that aren't cacheable?

dynamic.keyload.name=Dynamic keyload
dynamic.keyload.value=false
dynamic.keyload.description=When guessing params, extract words from every observed response. This is very powerful and quite buggy.

max.one.per.host.name=Max one per host
max.one.per.host.value=false

max.one.per.host+status.name=Max one per host+status
max.one.per.host+status.value=false

probe.identified.params.name=Probe identified params
probe.identified.params.value=true
probe.identified.params.description=Attempt to identify what type of input discovered parameters expect.

scan.identified.params.name=Scan identified params
scan.identified.params.value=false
scan.identified.params.description=Launch an active scan against every discovered parameter

fuzz.detect.name=Fuzz detect
fuzz.detect.value=false
fuzz.detect.description=Detect parameters by specifying a fuzz-string as a value, designed to cause errors

carpet.bomb.name=Carpet bomb
carpet.bomb.value=false
carpet.bomb.description=Send parameters as usual, but don't attempt to identify/report valid ones. Useful for OAST techniques.

try.cache.poison.name=Try cache poison
try.cache.poison.value=true
try.cache.poison.description=After discovering a parameter, test whether it can be used for cache poisoning

twitchy.cache.poison.name=Twitchy cache poison
twitchy.cache.poison.value=false
twitchy.cache.poison.description=Make cache poisoning detection capable of detecting non-reflected input (but more prone to FPs)

try.method.flip.name=Try method flip
try.method.flip.value=false
try.method.flip.description=Try flipping GET to POST to fit more parameters in each request

identify.smuggle.mutations.name=Identify smuggle mutations
identify.smuggle.mutations.value=false
identify.smuggle.mutations.description=Try using desync-style mutations to bypass header rewriting by front-ends.

try.bypass.name=Try -_ bypass
try.bypass.value=false
try.bypass.description=Convert all instances of - to _ in header names, to bypass some front-end rewrites

rotation.interval.name=Rotation interval
rotation.interval.value=999
rotation.interval.description=This doesn't work

rotation.increment.name=Rotation increment
rotation.increment.value=4
rotation.increment.description=This doesn't work

force.bucketsize.name=Force bucketsize
force.bucketsize.value=-1
force.bucketsize.description=Specify the number of parameters allowed in a single request. Set this to -1 to let Param Miner automatically determine this value on a per-target basis.

max.bucketsize.name=Max bucketsize
max.bucketsize.value=655